# CloudBoz - Magento Install
- name: "install magento"
  become_user: "{{ ansible_user }}"
  community.docker.docker_container:
    name: "{{ magento_docker_name }}"
    image: "{{ magento_docker_image }}:{{ magento_docker_tag }}"
    networks:
      - name: cloudboz-network
    # volumes:
    #   - "/cloudboz/{{ magento_docker_name }}-data:/var/lib/magento" ### Because need stateless dont need persistent volume if statefull uncomment
    restart_policy: always
    env:
      REDIS_PASSWORD: "{{ magento_docker_env_password }}"
    ports:
      - "{{ magento_docker_ports }}:6379"
    privileged: true
  tags:
    - install-magento

# CloudBoz - Magento Firewall Install
- name: "'{{ ufw_rule }}' port '{{ magento_docker_ports }}'"
  community.general.ufw:
    rule: "{{ ufw_rule }}"
    port: "{{ item }}"
    proto: tcp
  loop:
    - "{{ magento_docker_ports | quote }}"
  tags:
    - install-magento

# CloudBoz - Magento Uninstall
- name: "uninstall magento"
  become_user: "{{ ansible_user }}"
  community.docker.docker_container:
    name: "{{ magento_docker_name }}"
    state: absent
  tags:
    - uninstall-magento

# CloudBoz - Magento Firewall Uninstall
- name: "'{{ ufw_rule }}' port '{{ magento_docker_ports }}'"
  community.general.ufw:
    rule: "{{ ufw_rule }}"
    port: "{{ item }}"
    proto: tcp
    delete: yes
  loop:
    - "{{ magento_docker_ports | quote }}"
  tags:
    - uninstall-magento

# CloudBoz - Magento Uninstall with Data
# - name: "uninstall magento data"
#   become_user: "{{ ansible_user }}"
#   shell: "sudo rm -fr /cloudboz/{{ magento_docker_name }}-data"
#   tags:
#     - uninstall-magento-data