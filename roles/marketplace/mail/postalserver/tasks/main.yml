# CloudBoz - Postal Server Install
- name: "install postalserver"
  become_user: "{{ ansible_user }}"
  community.docker.docker_container:
    name: "{{ postalserver_docker_name }}"
    image: "{{ postalserver_docker_image }}:{{ postalserver_docker_tag }}"
    networks:
      - name: cloudboz-network
    volumes:
      - "/cloudboz/{{ postalserver_docker_name }}-data:/var/lib/postalserver"
    restart_policy: always
    ports:
      - "{{ postalserver_docker_ports }}:3306"
    env:
      MYSQL_ROOT_PASSWORD: "{{ postalserver_docker_env_root_password }}"
      MYSQL_DATABASE: "{{ postalserver_docker_env_database }}"
      MYSQL_USER: "{{ postalserver_docker_env_user }}"
      MYSQL_PASSWORD: "{{ postalserver_docker_env_password }}"
  tags:
    - install-postalserver

# CloudBoz - Postal Server Firewall Install
- name: "'{{ ufw_rule }}' port '{{ postalserver_docker_ports }}'"
  community.general.ufw:
    rule: "{{ ufw_rule }}"
    port: "{{ item }}"
    proto: tcp
  loop:
    - "{{ postalserver_docker_ports | quote }}"
  tags:
    - install-postalserver

# CloudBoz - Postal Server Uninstall
- name: "uninstall postalserver"
  become_user: "{{ ansible_user }}"
  community.docker.docker_container:
    name: "{{ postalserver_docker_name }}"
    state: absent
  tags:
    - uninstall-postalserver

# CloudBoz - Postal Server Firewall Uninstall
- name: "'{{ ufw_rule }}' port '{{ postalserver_docker_ports }}'"
  community.general.ufw:
    rule: "{{ ufw_rule }}"
    port: "{{ item }}"
    proto: tcp
    delete: yes
  loop:
    - "{{ postalserver_docker_ports | quote }}"
  tags:
    - uninstall-postalserver

# CloudBoz - Postal Server Uninstall with Data
- name: "uninstall postalserver data"
  become_user: "{{ ansible_user }}"
  shell: "sudo rm -fr /cloudboz/{{ postalserver_docker_name }}-data"
  tags:
    - uninstall-postalserver-data