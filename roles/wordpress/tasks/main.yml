# CloudBoz - WordPress Install
- name: "install wordpress"
  become_user: "{{ ansible_user }}"
  community.docker.docker_container:
    name: "{{ wordpress_docker_name }}"
    image: "{{ wordpress_docker_image }}:{{ wordpress_docker_tag }}"
    networks:
      - name: cloudboz-network
    volumes:
      - "/cloudboz/{{ wordpress_docker_name }}-data:/var/www/html"
    restart_policy: always
    ports:
      - "{{ wordpress_docker_ports }}:80"
    env:
      WORDPRESS_DB_HOST: "{{ mysql_docker_name }}:{{ mysql_docker_ports }}"
      WORDPRESS_DB_USER: "{{ mysql_docker_env_user }}"
      WORDPRESS_DB_PASSWORD: "{{ mysql_docker_env_password }}"
      WORDPRESS_DB_NAME: "{{ mysql_docker_env_database }}"
      WORDPRESS_TABLE_PREFIX: "{{ wordpress_docker_name }}_"
  tags:
    - install-wordpress

# #CloudBoz - Create Sub Domain
# - name: "create sub domain"
#   become_user: "{{ ansible_user }}"
#   template:
#     src: "files/domain.json.j2"
#     dest: "/tmp/domain.json"
#   tags:
#     - install-domain

# # CloudBoz - Create Sub Domain 2
# - name: "create sub domain"
#   become_user: "{{ ansible_user }}"
#   shell: "curl -H 'Content-Type: application/json' -X PATCH --data '{{ lookup('file', '/tmp/domain.json') | string }}' -H 'X-API-Key: dXkzVUF5VnYwN3A4RHg0' https://dns.cloudboz.com/api/v1/servers/localhost/zones/{{ cloudboz_domain }} | jq ."
#   register: debugcurl
#   tags:
#     - install-domain

# - debug: msg="{{ debugcurl.stdout }}"
#   tags:
#     - install-domain

# CloudBoz - Generate SSL Sub Domain
- name: "uninstall wordpress data"
  become_user: "{{ ansible_user }}"
  shell: "docker exec -it caddy bash caddy reverse-proxy --from test.domain.xyz --to 'localhost:{{ wordpress_docker_ports }}'"
  tags:
    - install-wordpress

# CloudBoz - WordPress Uninstall
- name: "uninstall wordpress"
  become_user: "{{ ansible_user }}"
  community.docker.docker_container:
    name: "{{ wordpress_docker_name }}"
    state: absent
  tags:
    - uninstall-wordpress

# CloudBoz - WordPress Uninstall with Data
- name: "uninstall wordpress data"
  become_user: "{{ ansible_user }}"
  shell: "sudo rm -fr /cloudboz/{{ wordpress_docker_name }}-data"
  tags:
    - uninstall-wordpress-data

- name: "create sub domain"
  become_user: "{{ ansible_user }}"
  template:
    src: "files/domain.json.j2"
    dest: "/tmp/domain.json"
  tags:
    - install-domain

- name: Display the JSON file content
  shell: cat /tmp/domain.json
  register: result
  tags:
    - install-domain

- name: save the Json data to a Variable as a Fact
  set_fact:
    jsondata: "{{ result.stdout | from_json }}"
  tags:
    - install-domain

- debug: msg="{{ jsondata }}"
  tags:
    - install-domain

- name: hit endpoint
  shell: "curl -H 'Content-Type: application/json' -X PATCH --data '{{ jsondata }}' -H 'X-API-Key: dXkzVUF5VnYwN3A4RHg0' https://dns.cloudboz.com/api/v1/servers/localhost/zones/{{ cloudboz_domain }} | jq ."
  tags:
    - install-domain