# CloudBoz - Drupal Install
- name: "install drupal"
  become_user: "{{ ansible_user }}"
  community.docker.docker_container:
    name: "{{ drupal_docker_name }}"
    image: "{{ drupal_docker_image }}:{{ drupal_docker_tag }}"
    networks:
      - name: cloudboz-network
    volumes:
      - "/cloudboz/{{ drupal_docker_name }}-data:/var/lib/drupal"
    restart_policy: always
    ports:
      - "{{ drupal_docker_ports }}:3306"
    env:
      MYSQL_ROOT_PASSWORD: "{{ drupal_docker_env_root_password }}"
      MYSQL_DATABASE: "{{ drupal_docker_env_database }}"
      MYSQL_USER: "{{ drupal_docker_env_user }}"
      MYSQL_PASSWORD: "{{ drupal_docker_env_password }}"
  tags:
    - install-drupal

# CloudBoz - Drupal Firewall Install
- name: "'{{ ufw_rule }}' port '{{ drupal_docker_ports }}'"
  community.general.ufw:
    rule: "{{ ufw_rule }}"
    port: "{{ item }}"
    proto: tcp
  loop:
    - "{{ drupal_docker_ports | quote }}"
  tags:
    - install-drupal

# CloudBoz - Drupal Uninstall
- name: "uninstall drupal"
  become_user: "{{ ansible_user }}"
  community.docker.docker_container:
    name: "{{ drupal_docker_name }}"
    state: absent
  tags:
    - uninstall-drupal

# CloudBoz - Drupal Firewall Uninstall
- name: "'{{ ufw_rule }}' port '{{ drupal_docker_ports }}'"
  community.general.ufw:
    rule: "{{ ufw_rule }}"
    port: "{{ item }}"
    proto: tcp
    delete: yes
  loop:
    - "{{ drupal_docker_ports | quote }}"
  tags:
    - uninstall-drupal

# CloudBoz - Drupal Uninstall with Data
- name: "uninstall drupal data"
  become_user: "{{ ansible_user }}"
  shell: "sudo rm -fr /cloudboz/{{ drupal_docker_name }}-data"
  tags:
    - uninstall-drupal-data